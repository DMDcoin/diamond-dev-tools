{
  "name": "honey-badger-testing",
  "version": "1.0.0",
  "description": "A collection of scripts to test the Honey Badger BFT integration in Parity",
  "main": "src/index.js",
  "scripts": {
    "build-open-ethereum": "cargo build --manifest-path ../openethereum/Cargo.toml && cargo build --manifest-path ../openethereum/Cargo.toml --release",
    "tsc": "tsc",
    "test": "mocha",
    "keepalive-wait": "node src/keepalive-wait.js",
    "keepalive-nowait": "node src/keepalive-nowait.js",
    "goLive": "npm run tsc && node dist/thomas_playground.js",
    "continuous": "npm run backup && ts-node src/runContinousTransactionsSender.ts npm run backup",
    "pendingTransactions": "ts-node src/runShowPendingTransactions.ts",
    "postinstall": "npm run copy-abis && npm run typechain",
    "heartbeat": "NODE_ENV=heartbeat ts-node src/runContinousTransactionsSender.ts",
    "t_onceASecond1": "NODE_ENV=onceASecond1 ts-node src/runContinousTransactionsSender.ts",
    "t_latency_5m_baseline10tx": "NODE_ENV=latency_5m_baseline10tx ts-node src/runContinousTransactionsSender.ts",
    "t_latency_5m_single_transactions": "NODE_ENV=latency_5m_single_transactions ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_single": "NODE_ENV=throughput_single ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p1": "NODE_ENV=throughput_multi1 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p2": "NODE_ENV=throughput_multi2 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p3": "NODE_ENV=throughput_multi3 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p4": "NODE_ENV=throughput_multi4 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p5": "NODE_ENV=throughput_multi5 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p6": "NODE_ENV=throughput_multi6 ts-node src/runContinousTransactionsSender.ts",
    "t_throughput_p7": "NODE_ENV=throughput_multi7 ts-node src/runContinousTransactionsSender.ts",
    "logCurrentBlockNumber": "ts-node src/runWriteCurrentBlockNumber.ts",
    "feedAccounts": "ts-node src/runFeedAccount.ts 10",
    "analyseTransaction": "ts-node src/runAnalyseTransaction.ts",
    "backup": "ts-node src/runBackupOldOutput.ts",
    "latency1": "npm-run-all backup logCurrentBlockNumber t_latency_5m_single_transactions --sequential logBlocksAsCsv backup",
    "latency2": "npm-run-all backup logCurrentBlockNumber --parallel t_latency_5m_baseline10tx t_latency_5m_single_transactions --sequential logBlocksAsCsv backup",
    "throughput1": "npm-run-all backup logCurrentBlockNumber t_throughput_single logBlocksAsCsv backup",
    "throughput2": "npm-run-all backup logCurrentBlockNumber --parallel t_throughput_p1 t_throughput_p2 t_throughput_p3 t_throughput_p4 t_throughput_p5 t_throughput_p6 t_throughput_p7 --sequential logBlocksAsCsv backup",
    "logBlocksAsCsv": "ts-node src/runLogBlocksAsCsv.ts",
    "waitAMinute": "ts-node src/runWait.ts",
    "updateHbbftAbi": "mkdir -p src/hbbftAbi && rm -fr src/hbbftAbi && mkdir src/hbbftAbi && cp ../hbbft-posdao-contracts/build/contracts/*.json src/hbbftAbi/",
    "runAllTests": "npm-run-all latency1 waitAMinute latency2 waitAMinute throughput1 waitAMinute waitAMinute throughput2",
    "setup-testnet": "cd testnet && python3 setup_testnet.py 1",
    "test-hbbft-contract": "NODE_ENV=localhost ts-node src/runHbbftTests.ts",
    "start-testnode": "cd testNode && ./start_node.sh",
    "buildAndDeployNetwork": "ts-node src/runBuildAndDeployNetwork.ts 7",
    "testNet-state-analysis": "ts-node testnet/control/runGetCurrentTestnetState.ts",
    "typechain": "typechain --target web3-v1 --outDir src/abi/contracts 'src/abi/json/*.json'",
    "copy-abis": "mkdir -p src/abi/json/ && cp ../hbbft-posdao-contracts/build/contracts/*.json src/abi/json/",
    "logEvents": "ts-node src/runLogAvailabilityEvents.ts",
    "logHeaders": "ts-node src/runLogHeaders.ts",
    "stakeOnValidators": "ts-node src/regression/runStakeOnValidators.ts",
    "startNode": "ts-node src/runStartNode.ts",
    "getCurrentTestnetState" : "ts-node src/regression/runGetCurrentTestnetState.ts",
    "addOneValidatorEachEpoch" : "ts-node src/regression/runAddOneValidatorEachEpoch.ts",
    "testAvailabilityHandling" : "ts-node src/regression/testAvailabilityHandling.ts",
    "prepareTest" : "cd testnet && ./setup_testnet.py 1 7 && cd -",
    "testAvailabilityHandlingClean": "npm run prepareTest && npm run testAvailabilityHandling"
  },
  "repository": {
    "type": "git",
    "url": "git@code.lab10.io:graz/04-artis/honey-badger-testing.git"
  },
  "keywords": [
    "bootstrap",
    "linting",
    "testing"
  ],
  "author": "dfo@lab10.coop",
  "license": "GPL-3.0-or-later",
  "dependencies": {
    "@types/prompt": "^1.1.0",
    "@types/underscore": "^1.9.4",
    "bignumber.js": "^9.0.0",
    "bip39": "^3.0.2",
    "config": "^3.3.0",
    "csv-writer": "^1.6.0",
    "ethereumjs-wallet": "^0.6.3",
    "prompt": "^1.1.0",
    "underscore": "^1.9.2",
    "web3": "^1.3.4",
    "websocket": "^1.0.31"
  },
  "devDependencies": {
    "@typechain/web3-v1": "^2.2.0",
    "eslint": "^5.16.0",
    "eslint-config-airbnb-base": "^13.2.0",
    "eslint-plugin-import": "^2.18.0",
    "eslint-utils": ">=1.4.1",
    "mocha": "^8.3.0",
    "npm-run-all": "^4.1.5",
    "ts-node": "^8.8.1",
    "typechain": "^4.0.3",
    "typescript": "^3.8.3"
  }
}

-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.headers
(
    block_number integer NOT NULL,
    block_hash character(64) COLLATE pg_catalog."default" NOT NULL,
    extra_data character varying(64) COLLATE pg_catalog."default" NOT NULL,
    block_time timestamp without time zone NOT NULL,
    block_duration integer NOT NULL,
    transaction_count integer NOT NULL,
    txs_per_sec double precision NOT NULL,
    posdao_hbbft_epoch integer,
    CONSTRAINT headers_pkey PRIMARY KEY (block_number)
);

CREATE TABLE IF NOT EXISTS public.posdao_epoch
(
    id integer NOT NULL,
    block_start integer NOT NULL,
    block_end integer,
    CONSTRAINT "PK_id" PRIMARY KEY (id),
    CONSTRAINT uc_block_start UNIQUE (block_start),
    CONSTRAINT uc_block_end UNIQUE (block_end)
);

CREATE TABLE IF NOT EXISTS public.node
(
    pool_address bit(160) NOT NULL,
    mining_address bit(160) NOT NULL,
    mining_public_key bit(512) NOT NULL,
    diamond_name character varying(512),
    ens_name character varying(512),
    added_block integer,
    PRIMARY KEY (pool_address)
);

CREATE TABLE IF NOT EXISTS public.posdao_epoch_node
(
    id_node bit(128),
    id_posdao_epoch integer
);

ALTER TABLE IF EXISTS public.posdao_epoch
    ADD CONSTRAINT fk_block_start FOREIGN KEY (block_start)
    REFERENCES public.headers (block_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_block_start
    ON public.posdao_epoch(block_start);


ALTER TABLE IF EXISTS public.posdao_epoch
    ADD CONSTRAINT fk_block_end FOREIGN KEY (block_end)
    REFERENCES public.headers (block_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_block_end
    ON public.posdao_epoch(block_end);


ALTER TABLE IF EXISTS public.node
    ADD CONSTRAINT fk_added_block FOREIGN KEY (added_block)
    REFERENCES public.headers (block_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS fki_fk_added_block
    ON public.node(added_block);


ALTER TABLE IF EXISTS public.posdao_epoch_node
    ADD FOREIGN KEY (id_node)
    REFERENCES public.node (pool_address) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.posdao_epoch_node
    ADD FOREIGN KEY (id_posdao_epoch)
    REFERENCES public.posdao_epoch (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;